name: Auto build evopt (track upstream main)

on:
  schedule:
    - cron: "17 6 * * *"   # täglich 08:17 Europa/Berlin (Cron läuft in UTC)
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1) Aktuellen Commit auf andig/evopt@main holen
      - name: Get latest upstream main commit
        id: get
        uses: actions/github-script@v7
        with:
          script: |
            const r = await github.rest.repos.getBranch({ owner: "andig", repo: "evopt", branch: "main" });
            core.setOutput("sha", r.data.commit.sha);
            core.setOutput("short", r.data.commit.sha.substring(0,7));

      # 2) Überspringen, falls genau diese SHA schon als Image vorhanden ist
      - name: Check if image for this SHA exists on Docker Hub
        id: check
        run: |
          SHA='${{ steps.get.outputs.sha }}'
          if docker manifest inspect litithio/evopt:${SHA} >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      # 3) Nur bauen, wenn neu
      - uses: docker/setup-qemu-action@v3
        if: steps.check.outputs.exists == 'false'
      - uses: docker/setup-buildx-action@v3
        if: steps.check.outputs.exists == 'false'
      - uses: docker/login-action@v3
        if: steps.check.outputs.exists == 'false'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push multi-arch image
        if: steps.check.outputs.exists == 'false'
        uses: docker/build-push-action@v6
        with:
          context: https://github.com/andig/evopt.git#${{ steps.get.outputs.sha }}
          platforms: linux/amd64,linux/arm64      # nur amd64? -> "linux/amd64"
          push: true
          tags: |
            litithio/evopt:latest
            litithio/evopt:main
            litithio/evopt:${{ steps.get.outputs.sha }}
            litithio/evopt:sha-${{ steps.get.outputs.short }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

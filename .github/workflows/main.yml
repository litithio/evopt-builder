name: Auto build evopt (track upstream main, SemVer + lint)

on:
  schedule:
    - cron: "0 14 * * *"   # ~16:00 Europe/Berlin (UTC)
  workflow_dispatch: {}

concurrency:
  group: evopt-main-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write   # fÃ¼r Auto-Commit der State-Dateien

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.get.outputs.sha }}
    steps:
      - name: Get latest upstream main commit (ls-remote)
        id: get
        run: |
          SHA="$(git ls-remote https://github.com/andig/evopt.git refs/heads/main | cut -f1)"
          if [ -z "$SHA" ]; then
            echo "Failed to fetch upstream SHA"; exit 1
          fi
          echo "sha=$SHA" >> "$GITHUB_OUTPUT"
          echo "Upstream main SHA: $SHA"

  lint:
    needs: prep
    runs-on: ubuntu-latest
    steps:
      - name: Fetch upstream at exact commit
        run: |
          git clone --no-checkout https://github.com/andig/evopt.git src
          cd src
          git fetch --depth 1 origin ${{ needs.prep.outputs.sha }}
          git checkout ${{ needs.prep.outputs.sha }}
      - name: Lint Dockerfile with hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: src/Dockerfile
          ignore: DL3008,DL3015
          failure-threshold: error

  build:
    needs: [prep, lint]
    if: github.event_name != 'pull_request' &&
        (github.event_name != 'push' || !contains(github.event.head_commit.message, '[skip ci]'))  # Guard gegen Auto-Commit-Loop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Ensure .state is not ignored
        run: |
          git check-ignore -v .state || true

      # Skip, wenn dieser Upstream-SHA schon verarbeitet wurde
      - name: Detect upstream change
        id: change
        run: |
          mkdir -p .state
          PREV_SHA="$(test -f .state/EVOPT_MAIN_LAST_SHA && cat .state/EVOPT_MAIN_LAST_SHA || echo '')"
          CUR_SHA='${{ needs.prep.outputs.sha }}'
          if [ "$CUR_SHA" = "$PREV_SHA" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No upstream change -> skipping build."
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
      - name: Debug show SHAs and state
        run: |
          echo "PREV_SHA=$(cat .state/EVOPT_MAIN_LAST_SHA 2>/dev/null || echo '<none>')"
          echo "CUR_SHA=${{ needs.prep.outputs.sha }}"
          echo "Changed? -> ${{ steps.change.outputs.changed }}"
          git status --porcelain

      # SemVer Patch-Bump (z.B. 0.1.7 -> 0.1.8)
      - name: Compute next SemVer
        id: semver
        if: steps.change.outputs.changed == 'true'
        run: |
          CUR_VER="$(test -f .state/EVOPT_MAIN_VERSION && cat .state/EVOPT_MAIN_VERSION || echo '0.1.0')"
          if [[ ! "$CUR_VER" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then CUR_VER="0.1.0"; fi
          IFS='.' read -r MA MI PA <<< "$CUR_VER"
          NEXT_VER="$MA.$MI.$((PA+1))"
          echo "current=$CUR_VER" >> $GITHUB_OUTPUT
          echo "next=$NEXT_VER" >> $GITHUB_OUTPUT

      - uses: docker/setup-qemu-action@v3
        if: steps.change.outputs.changed == 'true'
      - uses: docker/setup-buildx-action@v3
        if: steps.change.outputs.changed == 'true'
      - uses: docker/login-action@v3
        if: steps.change.outputs.changed == 'true'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push multi-arch image
        if: steps.change.outputs.changed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: https://github.com/andig/evopt.git#${{ needs.prep.outputs.sha }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            litithio/evopt:${{ steps.semver.outputs.next }}
            litithio/evopt:latest
          labels: |
            org.opencontainers.image.version=${{ steps.semver.outputs.next }}
            org.opencontainers.image.revision=${{ needs.prep.outputs.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Record processed SHA + version (and commit)
        if: steps.change.outputs.changed == 'true'
        run: |
          echo '${{ needs.prep.outputs.sha }}' > .state/EVOPT_MAIN_LAST_SHA
          echo '${{ steps.semver.outputs.next }}' > .state/EVOPT_MAIN_VERSION

      - name: Commit state update
        if: steps.change.outputs.changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(evopt main): release ${{ steps.semver.outputs.next }} for ${{ needs.prep.outputs.sha }} [skip ci]"
          file_pattern: |
            .state/EVOPT_MAIN_LAST_SHA
            .state/EVOPT_MAIN_VERSION

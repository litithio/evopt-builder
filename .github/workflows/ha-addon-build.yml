name: Build HA Add-on images (EVopt)

on:
  push:
    branches: [ main ]
    paths:
      - 'evopt/**'
      - 'repository.yaml'
      - '.github/workflows/**'
  schedule:
    - cron: '0 14 * * *'
  workflow_dispatch: {}

concurrency:
  group: evopt-ha-addon-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint Home Assistant add-on
        uses: frenck/action-addon-linter@v2
        with:
          path: ./evopt

  build:
    needs: lint
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: amd64
            platform: linux/amd64
          - arch: aarch64
            platform: linux/arm64
    steps:
      # 1) Upstream HEAD-SHA zuverlässig holen
      - name: Get latest upstream main commit (ls-remote)
        id: upstream
        run: |
          SHA="$(git ls-remote https://github.com/andig/evopt.git refs/heads/main | cut -f1)"
          echo "sha=$SHA" >> "$GITHUB_OUTPUT"
          echo "Upstream main SHA: $SHA"

      # 2) Unser Repo auschecken (volle History, explizit main)
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      # 3) Upstream-Änderung erkennen (State: evopt/LAST_UPSTREAM_SHA)
      - name: Detect upstream change
        id: change
        run: |
          PREV="$(test -f evopt/LAST_UPSTREAM_SHA && cat evopt/LAST_UPSTREAM_SHA || echo '')"
          CUR='${{ steps.upstream.outputs.sha }}'
          echo "PREV_SHA=$PREV"
          echo "CUR_SHA=$CUR"
          if [ -n "$CUR" ] && [ "$CUR" != "$PREV" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No upstream change -> skipping build."
          fi

      # 4) Version aus config.yaml lesen und PATCH bumpen (robust)
      - name: Compute next SemVer (from config.yaml)
        id: semver
        if: steps.change.outputs.changed == 'true'
        run: |
          set -e
          if [ ! -f evopt/config.yaml ]; then
            echo "config.yaml not found"; exit 1
          fi

          CUR="$(awk -F: '/^[[:space:]]*version[[:space:]]*:/ {gsub(/"/,"",$2); gsub(/[[:space:]]/,"",$2); print $2; exit}' evopt/config.yaml)"
          echo "Current version in config.yaml: '${CUR}'"

          if [[ ! "$CUR" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "ERROR: version in config.yaml is not SemVer (got: '$CUR')" >&2
            exit 1
          fi

          IFS='.' read -r MA MI PA <<< "$CUR"
          NEXT="$MA.$MI.$((PA+1))"
          echo "next=$NEXT" >> $GITHUB_OUTPUT
          echo "Next version: $NEXT"

      # 5) Buildx / Login
      - uses: docker/setup-qemu-action@v3
        if: steps.change.outputs.changed == 'true'
      - uses: docker/setup-buildx-action@v3
        if: steps.change.outputs.changed == 'true'
      - uses: docker/login-action@v3
        if: steps.change.outputs.changed == 'true'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6) Build & Push mit SemVer + latest
      - name: Build & push (${{ matrix.arch }})
        if: steps.change.outputs.changed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: https://github.com/andig/evopt.git#${{ steps.upstream.outputs.sha }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            docker.io/litithio/${{ matrix.arch }}-evopt-addon:${{ steps.semver.outputs.next }}
            docker.io/litithio/${{ matrix.arch }}-evopt-addon:latest
          labels: |
            io.hass.type=addon
            io.hass.version=${{ steps.semver.outputs.next }}
            io.hass.arch=${{ matrix.arch }}
            org.opencontainers.image.revision=${{ steps.upstream.outputs.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 7) Version in config.yaml setzen + SHA persistieren
      - name: Bump version in evopt/config.yaml & record upstream SHA
        if: steps.change.outputs.changed == 'true'
        run: |
          sed -i -E 's/^version:.*$/version: "${{ steps.semver.outputs.next }}"/' evopt/config.yaml
          echo '${{ steps.upstream.outputs.sha }}' > evopt/LAST_UPSTREAM_SHA
          echo "Now in config.yaml:"
          grep -E '^version:' evopt/config.yaml

      # 8) Debug: zeigen, was committet wird
      - name: Debug list evopt/ (pre-commit)
        if: steps.change.outputs.changed == 'true'
        run: |
          ls -la evopt
          echo "LAST_UPSTREAM_SHA=$(cat evopt/LAST_UPSTREAM_SHA 2>/dev/null || echo '<missing>')"
          git status --porcelain evopt

      # 9) Vor dem Commit: lokalen main an origin/main angleichen
      - name: Align local main to origin/main
        if: steps.change.outputs.changed == 'true' && matrix.arch == 'amd64'
        run: |
          git fetch origin main
          git checkout -B main
          git reset --hard origin/main

      # 10) Commit nur einmal (amd64) + sicher pushen
      - name: Commit version bump
        if: steps.change.outputs.changed == 'true' && matrix.arch == 'amd64'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(addon): bump version to ${% raw %}{{ steps.semver.outputs.next }}{% endraw %} [skip ci]"
          file_pattern: |
            evopt/config.yaml
            evopt/LAST_UPSTREAM_SHA
          branch: main
          push_options: '--force-with-lease'

      # 11) Fallback (falls Action nichts staged) – ebenfalls nur einmal
      - name: Fallback commit (if nothing staged)
        if: steps.change.outputs.changed == 'true' && matrix.arch == 'amd64'
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name  "github-actions[bot]"
          git add evopt/config.yaml evopt/LAST_UPSTREAM_SHA
          if git diff --cached --quiet; then
            echo "No changes staged."
          else
            git commit -m "chore(addon): bump version to ${{ steps.semver.outputs.next }} [skip ci]"
            git push origin HEAD:main --force-with-lease
          fi
